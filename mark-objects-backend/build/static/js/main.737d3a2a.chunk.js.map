{"version":3,"sources":["helpers.js","components/Report.jsx","assets/upload.svg","components/Upload.jsx","App.js","index.js"],"names":["downloadBlob","blob","filename","url","URL","createObjectURL","a","document","createElement","href","download","click","remove","Report","useState","startDate","setStartDate","endDate","setEndDate","onGetReport","axios","post","start_date","end_date","responseType","then","response","console","log","headers","split","data","className","to","value","type","onChange","e","target","onClick","Upload","file","name","error","image","setImage","xml","setXml","onUpload","formData","FormData","append","htmlFor","src","uploadImg","alt","id","accept","files","prev","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.737d3a2a.chunk.js","sourcesContent":["export const downloadBlob = (blob, filename) => {\r\n  const url = URL.createObjectURL(blob);\r\n  const a = document.createElement(\"a\");\r\n  a.href = url;\r\n  a.download = filename;\r\n  a.click();\r\n  a.remove();\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { downloadBlob } from \"../helpers\";\r\n\r\nconst Report = () => {\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n\r\n  const onGetReport = async () => {\r\n    if (startDate && endDate) {\r\n      axios\r\n        .post(\r\n          \"/api/report\",\r\n          { start_date: startDate, end_date: endDate },\r\n          {\r\n            responseType: \"blob\",\r\n          }\r\n        )\r\n        .then((response) => {\r\n          console.log(response);\r\n          const filename = response.headers[\"content-disposition\"].split(\r\n            \"filename=\"\r\n          )[1];\r\n          const { data } = response;\r\n          downloadBlob(data, filename);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"report-wrapper\"}>\r\n      <Link className={\"report-wrapper__upload-page-link\"} to={\"/\"}>\r\n        Upload\r\n      </Link>\r\n      <div className={\"report-wrapper__input-wrapper\"}>\r\n        <section>\r\n          <label>Start Date:</label>\r\n          <input\r\n            value={startDate}\r\n            type=\"date\"\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </section>\r\n        <section className={\"report-wrapper__end-date-wrapper\"}>\r\n          <label>End Date:</label>\r\n          <input\r\n            value={endDate}\r\n            type=\"date\"\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </section>\r\n        <button className={\"upload-wrapper__get-report\"} onClick={onGetReport}>\r\n          Get Report\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Report;\r\n","export default __webpack_public_path__ + \"static/media/upload.1020a0aa.svg\";","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport { downloadBlob } from \"../helpers\";\r\nimport \"./Upload.style.css\";\r\nimport uploadImg from \"../assets/upload.svg\";\r\n\r\nconst Upload = () => {\r\n  const [image, setImage] = useState({\r\n    file: null,\r\n    name: \"\",\r\n    error: \"\",\r\n  });\r\n\r\n  const [xml, setXml] = useState({ file: null, name: \"\", error: \"\" });\r\n\r\n  const onImageChoose = (e) => {\r\n    console.log(e.target.files[0]);\r\n    if (\r\n      !(\r\n        e.target.files[0].type === \"image/jpeg\" ||\r\n        e.target.files[0].type === \"image/jpg\"\r\n      )\r\n    ) {\r\n      setImage((prev) => ({\r\n        name: \"\",\r\n        file: null,\r\n        error: \"Please Choose a JPG File\",\r\n      }));\r\n    }\r\n\r\n    setImage((prev) => ({\r\n      error: \"\",\r\n      file: e.target.files[0],\r\n      name: e.target.files[0].name,\r\n    }));\r\n  };\r\n\r\n  const onXmlChoose = (e) => {\r\n    console.log(e);\r\n    console.log(e.target.files[0]);\r\n    if (!(e.target.files[0].type === \"text/xml\")) {\r\n      setXml((prev) => ({\r\n        name: \"\",\r\n        file: null,\r\n        error: \"Please Choose a xml File\",\r\n      }));\r\n    }\r\n\r\n    setXml((prev) => ({\r\n      error: \"\",\r\n      file: e.target.files[0],\r\n      name: e.target.files[0].name,\r\n    }));\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    if (image.file && xml.file) {\r\n      let formData = new FormData();\r\n      formData.append(\"image\", image.file);\r\n      formData.append(\"xml\", xml.file);\r\n      axios\r\n        .post(\"/api/mark\", formData, {\r\n          responseType: \"blob\",\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          const filename = response.headers[\"content-disposition\"].split(\r\n            \"filename=\"\r\n          )[1];\r\n          const { data } = response;\r\n          downloadBlob(data, filename);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={\"upload-wrapper\"}>\r\n      <Link className={\"upload-wrapper__report-page-link\"} to={\"/report\"}>\r\n        Report\r\n      </Link>\r\n      <div className={\"upload-wrapper__input-wrapper\"}>\r\n        <section>\r\n          <label htmlFor=\"image\">\r\n            <span>Upload Image File</span>\r\n            <img src={uploadImg} alt={\"upload\"} />\r\n            <input\r\n              id={\"image\"}\r\n              className={\"upload-wrapper__image\"}\r\n              type={\"file\"}\r\n              accept={\".jpg\"}\r\n              onChange={onImageChoose}\r\n            />\r\n          </label>\r\n          {image.error && (\r\n            <p className={\"upload-wrapper__error\"}>{image.error}</p>\r\n          )}\r\n          {image.name && <p className={\"upload-wrapper__name\"}>{image.name}</p>}\r\n        </section>\r\n        <section className={\"upload-wrapper__xml-wrapper\"}>\r\n          <label htmlFor=\"xml\">\r\n            <span>Upload XML File</span>\r\n            <img src={uploadImg} alt={\"upload\"} />\r\n            <input\r\n              id={\"xml\"}\r\n              className={\"upload-wrapper__xml\"}\r\n              type={\"file\"}\r\n              accept={\".xml\"}\r\n              onChange={onXmlChoose}\r\n            />\r\n          </label>\r\n          {xml.error && <p className={\"upload-wrapper__error\"}>{xml.error}</p>}\r\n          {xml.name && <p className={\"upload-wrapper__name\"}>{xml.name}</p>}\r\n        </section>\r\n        <button className={\"upload-wrapper__upload\"} onClick={onUpload}>\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Report from \"./components/Report\";\nimport Upload from \"./components/Upload\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={\"/\"} component={Upload} />\n        <Route path={\"/report\"} component={Report} />\n        <Route path={\"*\"}>\n          <h1>Error 404</h1>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}